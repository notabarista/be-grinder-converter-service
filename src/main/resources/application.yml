server:
  port: 28080
  use-forward-headers-strategy: true

spring:
  output:
    ansi:
      enabled: DETECT
  data:
    web:
      pageable:
        max-page-size: 100000
        default-page-size: 100000

  boot:
    admin:
      ui:
        public-url: http://localhost:28080/static/

  thymeleaf:
    prefix: classpath:/static/
    suffix: .html

  cloud:
    discovery:
      enabled: false

  mvc:
    log-request-details: true
  main:
    allow-bean-definition-overriding: true
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/changelog-master.xml
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${GRINDER_DB_URL}
    username: ${GRINDER_DB_USER}
    password: ${GRINDER_DB_PASS}
    hikari:
      maximum-pool-size: 2
  jpa:
    show-sql: false
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        default_schema: ${DEFAULT_SCHEMA}
        format_sql: true
        enable_lazy_load_no_trans: true
        jdbc:
          lob:
            non_contextual_creation: true

ribbon:
  http:
    client:
      enabled: true
  https:
    client:
      enabled: true

management:
  endpoints:
    web:
      exposure:
        include:
          - '*'
  endpoint:
    logfile:
      external_file: /var/log/${spring.application.name}.log

logging.file: /var/log/${spring.application.name}.log
logging:
  file:
    max-size: 10MB
    max-history: 2
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
    file: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  level:
    root: info
    org.springframework: warn
    org.hibernate: info
    org.notabarista: info

      #    logger.com.netflix.*: warn
