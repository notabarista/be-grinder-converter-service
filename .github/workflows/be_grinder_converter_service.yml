# This is a basic workflow to help you get started with Actions

name: BE-Grinder-Converter-Service

# Controls when the action will run. 
on:
  push:
    branches: [master]

  pull_request:
      branches:
        - '**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  trigger_common:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout branch from Github
      uses: convictional/trigger-workflow-and-wait@v1.3.0
      with:
        owner: notabarista
        repo: be-common
        github_token: ${{ secrets.CI_TOKEN}}
        ref: pipeline_common_config
        workflow_file_name: be_common.yml
        wait_interval: 300

  be_common_java__11_x64:
    needs: trigger_common
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout branch from Github
        uses: actions/checkout@v2
        
      - name: Setup JDK 11.0.10
        uses: actions/setup-java@v1
        with:
         java-version: '11.0.10'
         architecture: x64

      - name: Build with maven
        run: mvn dependency:tree clean install
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
      - name: Deploy artifacts
        run: mvn -batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
          
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Build spring docker image with maven
        run: mvn spring-boot:build-image -Dspring-boot.build-image.imageName=notabarista/be-grinder-converter-service
     
      - name: Docker pushing the latest image
        run: docker image push notabarista/be-grinder-converter-service:latest
#
#      - name: Login to Heroku
#        env:
#          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#        run: heroku container:login
#      - name: Build and push to Heroku
#        env:
#          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#        run: mvn clean heroku:deploy
#         run: mvn clean heroku deploy:jar -j target/*.jar -i Procfile --app

#      - name: Heroku Container Registry login
#        env:
#          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#        run: heroku container:login
#      - name: Build and push
#        env:
#          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#        run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web
#      - name: Release
#        env:
#          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web

      - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
        uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
        with:
            # Below you must provide variables for your Heroku app.

            # The email address associated with your Heroku account.
            # If you don't want to use repository secrets (which is recommended) you can do:
            # email: my.email@example.com
          email: ${{ secrets.HEROKU_EMAIL }}

            # Heroku API key associated with provided user's email.
            # Api Key is available under your Heroku account settings.
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

            # Name of the heroku application to which the build is to be sent.
          heroku_app_name: ${{ secrets.HEROKU_GRINDER_APP_NAME }}

            # (Optional, default: "./")
            # Dockerfile directory.
            # For example, if you have a Dockerfile in the root of your project, leave it as follows:
          dockerfile_directory: ./

            # (Optional, default: "Dockerfile")
            # Dockerfile name.
          dockerfile_name: Dockerfile

            # (Optional, default: "")
            # Additional options of docker build command.
          docker_options: "--no-cache"

            # (Optional, default: "web")
            # Select the process type for which you want the docker container to be uploaded.
            # By default, this argument is set to "web".
            # For more information look at https://devcenter.heroku.com/articles/process-model
          process_type: web
